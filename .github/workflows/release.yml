name: release 

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
      - name: Add poetry to path
        if: matrix.os != 'windows-latest'
        run: echo "${HOME}/.poetry/bin" >> $GITHUB_PATH

      - name: Add poetry to path
        if: matrix.os == 'windows-latest'
        run: echo "${HOME}/.poetry/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install package deps
        run: |
          poetry install

      - name: Build Python package
        run: poetry run build

      - name: pytest
        run: poetry run pytest tests

  python-publish:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, 3.10]
        os: [ubuntu-latest, macos-latest, windows-latest]
        exclude:
          - os: windows-latest
            python-version: 3.6
          - os: windows-latest
            python-version: 3.7
          - os: windows-latest
            python-version: 3.8

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Build Python package
        run: poetry build --no-sdist --strip --interpreter python${{matrix.python_version}}

      - name: List wheels
        if: matrix.os == 'windows-latest'
        run: dir target\wheels\

      - name: List wheels
        if: matrix.os != 'windows-latest'
        run: find ./target/wheels/

      - name: Install wheels
        if: matrix.os == 'windows-latest'
        run: pip install --find-links=target\wheels rust_dtw

      - name: Install wheels
        if: matrix.os != 'windows-latest'
        run: pip install target/wheels/rust_dtw*.whl

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/wheels/notia*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
